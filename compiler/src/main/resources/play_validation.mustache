{{#main_package}}
package {{&main_package}}
{{/main_package}}

import play.api.mvc.{Action, Controller}
import play.api.data.validation.Constraint
import de.zalando.play.controllers._
import PlayBodyParsing._
import PlayValidations._

{{#packages}}
object {{&package}} {
    {{#imports}}
    import {{&name}}
    {{/imports}}

    {{#constraints}}
    class {{& constraint_name }}(override val instance: {{& type_name }}) extends ValidationBase[{{& type_name }}] {
        override def constraints: Seq[Constraint[{{& type_name }}]] =
        Seq({{#restrictions}}{{&name}}{{^last}}, {{/last}}{{/restrictions}})
    }
    class {{& validation_name }}(override val instance: {{& type_name }}) extends RecursiveValidator[{{& type_name }}] {
      override val validators = Seq(new {{&constraint_name}}(instance))⮐
    }
    {{/constraints}}

    {{#validations}}
        class {{& validation_name }}(override val instance: {{& class_name }}) extends RecursiveValidator[{{& class_name }}] {
        override val validators = Seq(
            {{#fields}}
            new {{&validation_name}}(instance.{{&field_name}}){{^last}}, {{/last}}⮐
            {{/fields}}
        )
        }
    {{/validations}}

}
{{/packages}}