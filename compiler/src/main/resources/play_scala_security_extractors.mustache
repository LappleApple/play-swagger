{{if security_extractors.extractors}}
package {{main_package}}

import scala.concurrent.Future
import play.api.mvc._
import de.zalando.play.controllers.SwaggerSecurityExtractors._
{{for import in imports}}
import {{import.name}}
{{/for}}

trait SecurityExtractors {
    {{for extractor in security_extractors.extractors}}
    def {{extractor.name}}[User >: Any](header: RequestHeader): Future[Option[User]] =
        {{extractor.type}}{{if extractor.security_params}}({{for param in extractor.security_params}}{{param.name}}{{if param.isNotLast}}, {{/if}}){{/for}}{{/if}}(header) { {{if extractor.user_params}}({{for param in extractor.user_params}}{{param.name}}: String{{if param.isNotLast}}, {{/if}}{{/for}}){{else}}_{{/if}} =>
            ???
    }
    {{/for}}
    implicit val unauthorizedContentWriter = ???
    def unauthorizedContent(req: RequestHeader) = Results.Unauthorized(???)
}
{{/if}}