{{#main_package}}
package {{&main_package}}
{{/main_package}}


{{#packages}}
object {{&package}} {
    {{#imports}}
    import {{&name}}
    {{/imports}}

    {{#aliases}}
    type {{& name }} = {{& alias }}{{#underlying_type}}[{{& underlying_type }}]{{/underlying_type}}⮐
    {{/aliases}}

    {{#traits}}
    trait I{{& name}} {⮐
    {{#fields}}
        def {{&name}}: {{&typeName}}⮐
    {{/fields}}
    }⮐
    {{/traits}}

    {{#classes}}
    case class {{& name }}({{#fields}}{{&name}}: {{&typeName}}{{^last}}, {{/last}}⮐{{/fields}}) {{#trait}}extends I{{&name}} {{/trait}}⮐
    {{/classes}}⮐}
{{/packages}}